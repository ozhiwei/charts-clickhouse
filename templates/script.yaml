# This file is part of the ClickHouse Helm Chart
#    https://gitlab.com/MatthiasLohr/clickhouse-helm-chart
#
# Copyright 2020 Matthias Lohr <mail@mlohr.com>
#                Dorian Cantzen <dorian@extrument.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "defaultObjectName" . }}-script
  labels:
    {{- include "defaultLabels" . | nindent 4 }}
data:
  init.sh: |-
    #!/bin/bash
    
    chown -R 101:101 /etc/clickhouse-server/config.d

    if [[ -z $CLICKHOUSE_REPLICA_NUMBER ]]
    then
        echo "error: unknow CLICKHOUSE_REPLICA_NUMBER, exit"
        exit 1
    fi

    ((index=${HOSTNAME#*-}+1))

    ((cur_shard=(index+CLICKHOUSE_REPLICA_NUMBER-1)/CLICKHOUSE_REPLICA_NUMBER))
    ((cur_replica=((index+CLICKHOUSE_REPLICA_NUMBER-1)%CLICKHOUSE_REPLICA_NUMBER)+1))

    echo "cur_shard:$cur_shard, cur_replica:$cur_replica"

    echo "<yandex>
        <macros>
            <layer>01</layer>
            <shard>$cur_shard</shard>
            <replica>$cur_replica</replica>
        </macros>
    </yandex>" > /etc/clickhouse-server/config.d/macros.xml

    printf_metrika > /etc/clickhouse-server/config.d/metrika.xml

  printf_metrika.sh: |-
    #!/bin/bash

    replica=$CLICKHOUSE_REPLICA_NUMBER
    ((replica-=1))
    function create_replica() {
        for j in $(seq 0 $replica)
        do
            printf "                %s\n" "<replica>"
            printf "                    %s\n" "<host>clickhouse-$j.clickhouse-headless.default.svc.cluster.local</host>"
            printf "                    %s\n" "<port>{{ .Values.clickhouse.ports.native }}</port>"
            printf "                    %s\n" "<user>{{ .Values.clickhouse.username }}</user>"
            printf "                    %s\n" "<password>{{ .Values.clickhouse.password }}</password>"
            printf "                %s\n" "</replica>"
        done
    }

    printf "%s\n" "<yandex>"
    printf "%s\n" "    <remote_servers>"
    printf "%s\n" "        <{{ .Values.clickhouse.clusterName }}>"

    for i in $(seq 1 $CLICKHOUSE_SHARD_NUMBER)
    do
        echo "          <shard>"
        echo "              <internal_replication>true</internal_replication>"
        create_replica
        echo "          </shard>"
    done

    printf "%s\n" "        </{{ .Values.clickhouse.clusterName }}>"
    printf "%s\n" "    </remote_servers>"
    printf "%s\n" "</yandex>"
          
# For shard configuration see https://clickhouse.tech/docs/en/operations/table_engines/distributed/
